# Load additional stuff
BASH_CUSTOMIZER_SCRIPT="$HOME/.bash-customizer"
[[ -s $BASH_CUSTOMIZER_SCRIPT ]] && source $BASH_CUSTOMIZER_SCRIPT

# Node.js env setup with NVM
NVM_SCRIPT="$HOME/.nvm/nvm.sh"
if [ -s $NVM_SCRIPT ]
then
  . $NVM_SCRIPT            # Add NVM to PATH for scripting
fi

# Powerline
if [ -d $PYTHON_PACKAGES_DIR ]
then
  powerline-daemon -q
  POWERLINE_BASH_CONTINUATION=1
  POWERLINE_BASH_SELECT=1
  . $PYTHON_PACKAGES_DIR/powerline/bindings/bash/powerline.sh
fi

# Git completion
GIT_COMPLETION_SCRIPT="$HOME/.git-completion.sh"
[[ -s $GIT_COMPLETION_SCRIPT ]] && source $GIT_COMPLETION_SCRIPT

# Set SSH to use gpg-agent
if [ $GPG_SETUP ]
then
  echo 'Setting up GPG...'

  # GPG configuration
  GPG_TTY=$(tty)
  export GPG_TTY

  unset SSH_AGENT_PID
  if [ -f "${HOME}/.gpg-agent-info" ]; then
      . "${HOME}/.gpg-agent-info"
      export GPG_AGENT_INFO
      export SSH_AUTH_SOCK
  else if [ "${gnupg_SSH_AUTH_SOCK_by:-0}" -ne $$ ]; then
          export SSH_AUTH_SOCK="/run/user/$UID/gnupg/S.gpg-agent.ssh"
      fi
  fi
else
  echo 'Skipping GPG setup...'
fi
